//Levels Go Here
var testMap = {
	gridLayers: [[
       101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
       101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
       101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
       101,101,101,101,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,101,101,101,
       101,101,101,100,104,104,100,100,100,100,100,100,100,100,100,103,103,103,101,101,101,101,
       101,101,100,104,104,104,104,100,102,500,502,504,102,106,100,103,103,103,103,101,101,101,
       101,101,100,104,104,104,104,104,102,501,503,505,102,106,103,103,103,103,103,101,101,101,
       101,101,100,104,104,104,105,100,100,102,102,102,300,106,100,100,103,103,103,101,101,101,
       101,101,100,100,100,104,100,100,100,100,100,100,100,100,100,100,103,100,100,101,101,101,
       101,101,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,
       101,101,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,
       101,101,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,
       101,101,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,
       101,101,101,100,100,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,
       101,101,101,101,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,
       101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,
       101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,],

       [
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,900,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,],],

    rows: 17,
    cols: 22,
    levelName: "testMap",
        enemies:[
{x:1001,y:440,type:0}, {x:918,y:599,type:0}, {x:756,y:598,type:0}, ]
};

var layersTestMap = {
	gridLayers: [[
       100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,100,300,100,100,100,100,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,105,102,102,102,102,107,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,104,108,108,108,108,104,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,103,109,109,109,109,103,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,103,101,101,101,101,103,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,103,103,103,103,103,103,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
       100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,],
       [
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,900,900,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,900,900,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,
       000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,],],
    rows: 17,
    cols: 22,
    levelName: "layerTest",
        enemies:[
	{x:1008,y:358,type:0}, {x:1006,y:340,type:0}, {x:970,y:363,type:0}, {x:986,y:335,type:0}, {x:1021,y:324,type:0},] 
}

function saveMap(mapName, grid)
{
	console.log("saving map: " + mapName, grid);

	var gridString = "[";

	for(var i = 0; i < grid.map.length; i++)
	{
		gridString += saveLayers(i,grid);
	}

	
	gridString += "],";

	console.log("var " + mapName + " = {\n" + "gridLayers: " + gridString + "\n    rows: " + grid.mapRows + "," + "\n    cols: " 
		+ grid.mapCols + "," + "\n    levelName: \"" + mapName + "\","
		+ "\n        enemies:" + spawnListSaveText() + "};");
}

function saveLayers(layer,grid)
{
	var multiDimArray = "[";
	for(var row = 0; row < grid.mapRows; row++)
	{
		multiDimArray += "\n       ";
		for(var col = 0; col < grid.mapCols; col++)
		{
			var tileIndex = roomTileToIndex(col,row, grid.mapCols);
			var tileType = grid.map[layer][tileIndex];

			if(tileType == undefined)
			{
				multiDimArray += "000,";
			}
			else
			{
				multiDimArray += "" + tileType + ",";
			}		
		}
	}
	multiDimArray += "],\n";

	return multiDimArray;
}

function loadMap(mapName)
{
	for(var i = 0; i < allLvls.length; i++)
	{
		if(allLvls[i].levelName == mapName)
		{
			worldMap = Array.from(allLvls[i].gridLayers);
			handleCharacterPositions(i);
		}
		else
		{
			console.log("map doesn't exist!");
		}
	}
}

function handleCharacterPositions(whichLevel)
{
	player.hasEnterAnotherLevel = true;
	clearSpawnList();
	enemiesStartSpots = [];
	enemiesList = [];

	for(var i = 0; i < allLvls[whichLevel].enemies.length; i++)
	{
		console.log(allLvls[whichLevel].enemies[i].x,allLvls[whichLevel].enemies[i].y);
		addEnemyToSpawnList(allLvls[whichLevel].enemies[i].x,allLvls[whichLevel].enemies[i].y);
	}

	player.reset();
	findSpawnSpots();
	popEnemyList();
	for(var i = 0; i < enemiesList.length; i++)
	{
		enemiesList[i].init(slimePic, "Slime " + i);
	}
	player.hasEnterAnotherLevel = false;
}
